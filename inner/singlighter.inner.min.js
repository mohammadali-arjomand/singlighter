const fs=require("fs"),http=require("http"),command=process.argv[2],archive={page:`import { Page } from '../singlight.js';

export default class {{PAGENAME}} extends Page {
    template() {
        return '';
    }
    setup() {
        // ...
    }
}`};switch(command){case"make:page":process.argv.length<4?errorHelper("Bad usage:\n	You must set a name for your page"):makePageCmd(process.argv[3]);break;case"serve":serveCmd();break;default:errorHelper(`Bad usage:
	'${command}' is not a command`)}function errorHelper(e){console.error("\x1b[31m%s\x1b[0m",e)}function successHelper(e){console.log("\x1b[32m%s\x1b[0m",e)}function makePageCmd(e){fs.writeFileSync(`./Scripts/Pages/${e}.js`,archive.page.replace("{{PAGENAME}}",e)),successHelper("Page was created successfully")}function serveCmd(){successHelper("Server was started on [http://localhost:8000] - Press Ctrl+C for stop server");let e=(e,r)=>{e.url="."+e.url,fs.existsSync(e.url)||(e.url="/"),url=fs.lstatSync(e.url).isFile()?"./"+e.url:`./${e.url}/index.html`;let s=fs.readFileSync(url);"js"==url.substring(url.length-2,url.length)&&r.setHeader("Content-Type","text/javascript"),r.write(s),r.end()},r=http.createServer(e).listen(8e3);fs.watch(".",()=>{successHelper("Files was modified, Server was restarted"),r.close(),r=http.createServer(e).listen(8e3)})}
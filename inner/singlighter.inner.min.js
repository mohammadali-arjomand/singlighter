const fs=require("fs"),http=require("http"),command=process.argv[2],archive={page:`import { Page } from '../singlight.js';

export default class {{PAGENAME}} extends Page {
    template() {
        return '';
    }
    setup() {
        // ...
    }
}`,function:`export default function {{NAME}}() {
    // ...
}`};switch(command){case"make:":makeCmd();break;case"make:page":process.argv.length<4?errorHelper("Bad usage:\n	You must set a name for your page"):makePageCmd(process.argv[3]);break;case"make:accessor":process.argv.length<4?errorHelper("Bad usage:\n	You must set a name for your accessor"):makeAccessorCmd(process.argv[3]);break;case"make:component":process.argv.length<4?errorHelper("Bad usage:\n	You must set a name for your component"):makeComponentCmd(process.argv[3]);break;case"make:hook":process.argv.length<4?errorHelper("Bad usage:\n	You must set a name for your hook"):makeHookCmd(process.argv[3]);break;case"serve":serveCmd();break;default:errorHelper(`Bad usage:
	'${command}' is not a command`)}function errorHelper(e){console.error("\x1b[31m%s\x1b[0m",e)}function successHelper(e){console.log("\x1b[32m%s\x1b[0m",e)}function infoHelper(e){console.info("\x1b[34m%s\x1b[0m",e)}function makeCmd(){infoHelper(`All make commands:
    make:page
    make:accessor
    make:component
    make:hook`)}function makePageCmd(e){fs.existsSync(`./Scripts/Pages/${e}.js`)?errorHelper(`'${e}' already exists`):(fs.writeFileSync(`./Scripts/Pages/${e}.js`,archive.page.replace("{{PAGENAME}}",e)),successHelper("Page was created successfully"))}function makeAccessorCmd(e){fs.existsSync(`./Scripts/Accessors/${e}.js`)?errorHelper(`'${e}' already exists`):(fs.writeFileSync(`./Scripts/Accessors/${e}.js`,archive.function.replace("{{NAME}}",e)),successHelper("Accessor was created successfully"))}function makeComponentCmd(e){fs.existsSync(`./Scripts/Components/${e}.js`)?errorHelper(`'${e}' already exists`):(fs.writeFileSync(`./Scripts/Components/${e}.js`,archive.function.replace("{{NAME}}",e)),successHelper("Component was created successfully"))}function makeHookCmd(e){fs.existsSync(`./Scripts/Hooks/${e}.js`)?errorHelper(`'${e}' already exists`):(fs.writeFileSync(`./Scripts/Hooks/${e}.js`,archive.function.replace("{{NAME}}",e)),successHelper("Hook was created successfully"))}function serveCmd(){successHelper("Server was started on [http://localhost:8000] - Press Ctrl+C for stop server");let e=(e,s)=>{e.url="."+e.url,fs.existsSync(e.url)||(e.url="/"),url=fs.lstatSync(e.url).isFile()?"./"+e.url:`./${e.url}/index.html`;let r=fs.readFileSync(url);"js"==url.substring(url.length-2,url.length)&&s.setHeader("Content-Type","text/javascript"),s.write(r),s.end()},s=http.createServer(e).listen(8e3);fs.watch(".",()=>{successHelper("Files was modified, Server was restarted"),s.close(),s=http.createServer(e).listen(8e3)})}